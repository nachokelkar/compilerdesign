State 83 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Statement

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' '{' Statement '}' Statement
    4          | FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement
    5          | FOR '(' InExpression ')' '{' Statement '}' Statement
    6          | FOR '(' OfExpression ')' '{' Statement '}' Statement
    7          | RETURN Expression SEMICOLON Statement
    8          | Declaration SEMICOLON Statement
    9          | AssignmentExpression SEMICOLON Statement
   10          | UnaryExpression SEMICOLON Statement
   11          | %empty

   12 UnaryExpression: IDENTIFIER UNARYMINUS
   13                | IDENTIFIER UNARYPLUS
   14                | UNARYMINUS IDENTIFIER
   15                | UNARYPLUS IDENTIFIER

   16 Declaration: VAR Variables

   17 Variables: Variables ',' Variable
   18          | Variable

   19 Variable: IDENTIFIER
   20         | IDENTIFIER '=' AssignmentRHS

   21 Condition: '!' OrExpression
   22          | OrExpression

   23 OrExpression: OrExpression '|' '|' AndExpression
   24             | AndExpression

   25 AndExpression: AndExpression '&' '&' ConditionalBase
   26              | ConditionalBase

   27 ConditionalBase: '(' Condition ')'
   28                | RelationalExpression
   29                | TRUE
   30                | FALSE

   31 RelationalExpression: RelationalExpression RelationalOperator Expression
   32                     | Expression

   33 RelationalOperator: '<'
   34                   | '>'
   35                   | '<' '='
   36                   | '>' '='
   37                   | '=' '='
   38                   | '!' '='

   39 Expression: Expression '+' MultDiv
   40           | Expression '-' MultDiv
   41           | MultDiv

   42 MultDiv: MultDiv '*' ExponentialExpression
   43        | MultDiv '/' ExponentialExpression
   44        | ExponentialExpression

   45 ExponentialExpression: UnaryPostExpression '^' ExponentialExpression
   46                      | UnaryPostExpression

   47 UnaryPostExpression: UnaryPreExpression UNARYPLUS
   48                    | UnaryPreExpression UNARYMINUS
   49                    | UnaryPreExpression

   50 UnaryPreExpression: UNARYPLUS ExpressionBase
   51                   | UNARYMINUS ExpressionBase
   52                   | ExpressionBase

   53 ExpressionBase: '(' Expression ')'
   54               | IDENTIFIER
   55               | NUM

   56 Initialisation: AssignmentExpression
   57               | %empty

   58 AssignmentExpression: IDENTIFIER '=' AssignmentRHS

   59 AssignmentRHS: RelationalExpression
   60              | Array

   61 InExpression: IDENTIFIER IN Iterable

   62 OfExpression: IDENTIFIER OF Iterable

   63 Iterable: Array
   64         | STRING
   65         | IDENTIFIER

   66 Array: '[' Elements ']'

   67 Elements: Elements ',' Element
   68         | Element

   69 Element: IDENTIFIER
   70        | NUM
   71        | STRING


Terminals, with rules where they appear

$end (0) 0
'!' (33) 21 38
'&' (38) 25
'(' (40) 2 3 4 5 6 27 53
')' (41) 2 3 4 5 6 27 53
'*' (42) 42
'+' (43) 39
',' (44) 17 67
'-' (45) 40
'/' (47) 43
'<' (60) 33 35
'=' (61) 20 35 36 37 38 58
'>' (62) 34 36
'[' (91) 66
']' (93) 66
'^' (94) 45
'{' (123) 2 3 4 5 6
'|' (124) 23
'}' (125) 2 3 4 5 6
error (256)
RETURN (258) 7
SEMICOLON (259) 4 7 8 9 10
NUM (260) 55 70
VAR (261) 16
TRUE (262) 29
FALSE (263) 30
IF (264) 2 3
FOR (265) 4 5 6
IN (266) 61
OF (267) 62
ELSE (268) 2
STRING (269) 64 71
IDENTIFIER (270) 12 13 14 15 19 20 54 58 61 62 65 69
UNARYPLUS (271) 13 15 47 50
UNARYMINUS (272) 12 14 48 51


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
Program (37)
    on left: 1, on right: 0
Statement (38)
    on left: 2 3 4 5 6 7 8 9 10 11, on right: 1 2 3 4 5 6 7 8 9 10
UnaryExpression (39)
    on left: 12 13 14 15, on right: 10
Declaration (40)
    on left: 16, on right: 8
Variables (41)
    on left: 17 18, on right: 16 17
Variable (42)
    on left: 19 20, on right: 17 18
Condition (43)
    on left: 21 22, on right: 2 3 4 27
OrExpression (44)
    on left: 23 24, on right: 21 22 23
AndExpression (45)
    on left: 25 26, on right: 23 24 25
ConditionalBase (46)
    on left: 27 28 29 30, on right: 25 26
RelationalExpression (47)
    on left: 31 32, on right: 28 31 59
RelationalOperator (48)
    on left: 33 34 35 36 37 38, on right: 31
Expression (49)
    on left: 39 40 41, on right: 4 7 31 32 39 40 53
MultDiv (50)
    on left: 42 43 44, on right: 39 40 41 42 43
ExponentialExpression (51)
    on left: 45 46, on right: 42 43 44 45
UnaryPostExpression (52)
    on left: 47 48 49, on right: 45 46
UnaryPreExpression (53)
    on left: 50 51 52, on right: 47 48 49
ExpressionBase (54)
    on left: 53 54 55, on right: 50 51 52
Initialisation (55)
    on left: 56 57, on right: 4
AssignmentExpression (56)
    on left: 58, on right: 9 56
AssignmentRHS (57)
    on left: 59 60, on right: 20 58
InExpression (58)
    on left: 61, on right: 5
OfExpression (59)
    on left: 62, on right: 6
Iterable (60)
    on left: 63 64 65, on right: 61 62
Array (61)
    on left: 66, on right: 60 63
Elements (62)
    on left: 67 68, on right: 66 67
Element (63)
    on left: 69 70 71, on right: 67 68


State 0

    0 $accept: . Program $end

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Program               go to state 8
    Statement             go to state 9
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 1

    7 Statement: RETURN . Expression SEMICOLON Statement

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17

    Expression             go to state 18
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 2

   16 Declaration: VAR . Variables

    IDENTIFIER  shift, and go to state 24

    Variables  go to state 25
    Variable   go to state 26


State 3

    2 Statement: IF . '(' Condition ')' '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF . '(' Condition ')' '{' Statement '}' Statement

    '('  shift, and go to state 27


State 4

    4 Statement: FOR . '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement
    5          | FOR . '(' InExpression ')' '{' Statement '}' Statement
    6          | FOR . '(' OfExpression ')' '{' Statement '}' Statement

    '('  shift, and go to state 28


State 5

   12 UnaryExpression: IDENTIFIER . UNARYMINUS
   13                | IDENTIFIER . UNARYPLUS
   58 AssignmentExpression: IDENTIFIER . '=' AssignmentRHS

    UNARYPLUS   shift, and go to state 29
    UNARYMINUS  shift, and go to state 30
    '='         shift, and go to state 31


State 6

   15 UnaryExpression: UNARYPLUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 32


State 7

   14 UnaryExpression: UNARYMINUS . IDENTIFIER

    IDENTIFIER  shift, and go to state 33


State 8

    0 $accept: Program . $end

    $end  shift, and go to state 34


State 9

    1 Program: Statement .

    $default  reduce using rule 1 (Program)


State 10

   10 Statement: UnaryExpression . SEMICOLON Statement

    SEMICOLON  shift, and go to state 35


State 11

    8 Statement: Declaration . SEMICOLON Statement

    SEMICOLON  shift, and go to state 36


State 12

    9 Statement: AssignmentExpression . SEMICOLON Statement

    SEMICOLON  shift, and go to state 37


State 13

   55 ExpressionBase: NUM .

    $default  reduce using rule 55 (ExpressionBase)


State 14

   54 ExpressionBase: IDENTIFIER .

    $default  reduce using rule 54 (ExpressionBase)


State 15

   50 UnaryPreExpression: UNARYPLUS . ExpressionBase

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    '('         shift, and go to state 17

    ExpressionBase  go to state 38


State 16

   51 UnaryPreExpression: UNARYMINUS . ExpressionBase

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    '('         shift, and go to state 17

    ExpressionBase  go to state 39


State 17

   53 ExpressionBase: '(' . Expression ')'

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17

    Expression             go to state 40
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 18

    7 Statement: RETURN Expression . SEMICOLON Statement
   39 Expression: Expression . '+' MultDiv
   40           | Expression . '-' MultDiv

    SEMICOLON  shift, and go to state 41
    '+'        shift, and go to state 42
    '-'        shift, and go to state 43


State 19

   41 Expression: MultDiv .
   42 MultDiv: MultDiv . '*' ExponentialExpression
   43        | MultDiv . '/' ExponentialExpression

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 41 (Expression)


State 20

   44 MultDiv: ExponentialExpression .

    $default  reduce using rule 44 (MultDiv)


State 21

   45 ExponentialExpression: UnaryPostExpression . '^' ExponentialExpression
   46                      | UnaryPostExpression .

    '^'  shift, and go to state 46

    $default  reduce using rule 46 (ExponentialExpression)


State 22

   47 UnaryPostExpression: UnaryPreExpression . UNARYPLUS
   48                    | UnaryPreExpression . UNARYMINUS
   49                    | UnaryPreExpression .

    UNARYPLUS   shift, and go to state 47
    UNARYMINUS  shift, and go to state 48

    $default  reduce using rule 49 (UnaryPostExpression)


State 23

   52 UnaryPreExpression: ExpressionBase .

    $default  reduce using rule 52 (UnaryPreExpression)


State 24

   19 Variable: IDENTIFIER .
   20         | IDENTIFIER . '=' AssignmentRHS

    '='  shift, and go to state 49

    $default  reduce using rule 19 (Variable)


State 25

   16 Declaration: VAR Variables .
   17 Variables: Variables . ',' Variable

    ','  shift, and go to state 50

    $default  reduce using rule 16 (Declaration)


State 26

   18 Variables: Variable .

    $default  reduce using rule 18 (Variables)


State 27

    2 Statement: IF '(' . Condition ')' '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' . Condition ')' '{' Statement '}' Statement

    NUM         shift, and go to state 13
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 53
    '!'         shift, and go to state 54

    Condition              go to state 55
    OrExpression           go to state 56
    AndExpression          go to state 57
    ConditionalBase        go to state 58
    RelationalExpression   go to state 59
    Expression             go to state 60
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 28

    4 Statement: FOR '(' . Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement
    5          | FOR '(' . InExpression ')' '{' Statement '}' Statement
    6          | FOR '(' . OfExpression ')' '{' Statement '}' Statement

    IDENTIFIER  shift, and go to state 61

    $default  reduce using rule 57 (Initialisation)

    Initialisation        go to state 62
    AssignmentExpression  go to state 63
    InExpression          go to state 64
    OfExpression          go to state 65


State 29

   13 UnaryExpression: IDENTIFIER UNARYPLUS .

    $default  reduce using rule 13 (UnaryExpression)


State 30

   12 UnaryExpression: IDENTIFIER UNARYMINUS .

    $default  reduce using rule 12 (UnaryExpression)


State 31

   58 AssignmentExpression: IDENTIFIER '=' . AssignmentRHS

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17
    '['         shift, and go to state 66

    RelationalExpression   go to state 67
    Expression             go to state 60
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23
    AssignmentRHS          go to state 68
    Array                  go to state 69


State 32

   15 UnaryExpression: UNARYPLUS IDENTIFIER .

    $default  reduce using rule 15 (UnaryExpression)


State 33

   14 UnaryExpression: UNARYMINUS IDENTIFIER .

    $default  reduce using rule 14 (UnaryExpression)


State 34

    0 $accept: Program $end .

    $default  accept


State 35

   10 Statement: UnaryExpression SEMICOLON . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 70
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 36

    8 Statement: Declaration SEMICOLON . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 71
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 37

    9 Statement: AssignmentExpression SEMICOLON . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 72
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 38

   50 UnaryPreExpression: UNARYPLUS ExpressionBase .

    $default  reduce using rule 50 (UnaryPreExpression)


State 39

   51 UnaryPreExpression: UNARYMINUS ExpressionBase .

    $default  reduce using rule 51 (UnaryPreExpression)


State 40

   39 Expression: Expression . '+' MultDiv
   40           | Expression . '-' MultDiv
   53 ExpressionBase: '(' Expression . ')'

    ')'  shift, and go to state 73
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43


State 41

    7 Statement: RETURN Expression SEMICOLON . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 74
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 42

   39 Expression: Expression '+' . MultDiv

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17

    MultDiv                go to state 75
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 43

   40 Expression: Expression '-' . MultDiv

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17

    MultDiv                go to state 76
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 44

   42 MultDiv: MultDiv '*' . ExponentialExpression

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17

    ExponentialExpression  go to state 77
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 45

   43 MultDiv: MultDiv '/' . ExponentialExpression

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17

    ExponentialExpression  go to state 78
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 46

   45 ExponentialExpression: UnaryPostExpression '^' . ExponentialExpression

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17

    ExponentialExpression  go to state 79
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 47

   47 UnaryPostExpression: UnaryPreExpression UNARYPLUS .

    $default  reduce using rule 47 (UnaryPostExpression)


State 48

   48 UnaryPostExpression: UnaryPreExpression UNARYMINUS .

    $default  reduce using rule 48 (UnaryPostExpression)


State 49

   20 Variable: IDENTIFIER '=' . AssignmentRHS

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17
    '['         shift, and go to state 66

    RelationalExpression   go to state 67
    Expression             go to state 60
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23
    AssignmentRHS          go to state 80
    Array                  go to state 69


State 50

   17 Variables: Variables ',' . Variable

    IDENTIFIER  shift, and go to state 24

    Variable  go to state 81


State 51

   29 ConditionalBase: TRUE .

    $default  reduce using rule 29 (ConditionalBase)


State 52

   30 ConditionalBase: FALSE .

    $default  reduce using rule 30 (ConditionalBase)


State 53

   27 ConditionalBase: '(' . Condition ')'
   53 ExpressionBase: '(' . Expression ')'

    NUM         shift, and go to state 13
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 53
    '!'         shift, and go to state 54

    Condition              go to state 82
    OrExpression           go to state 56
    AndExpression          go to state 57
    ConditionalBase        go to state 58
    RelationalExpression   go to state 59
    Expression             go to state 83
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 54

   21 Condition: '!' . OrExpression

    NUM         shift, and go to state 13
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 53

    OrExpression           go to state 84
    AndExpression          go to state 57
    ConditionalBase        go to state 58
    RelationalExpression   go to state 59
    Expression             go to state 60
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 55

    2 Statement: IF '(' Condition . ')' '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition . ')' '{' Statement '}' Statement

    ')'  shift, and go to state 85


State 56

   22 Condition: OrExpression .
   23 OrExpression: OrExpression . '|' '|' AndExpression

    '|'  shift, and go to state 86

    $default  reduce using rule 22 (Condition)


State 57

   24 OrExpression: AndExpression .
   25 AndExpression: AndExpression . '&' '&' ConditionalBase

    '&'  shift, and go to state 87

    $default  reduce using rule 24 (OrExpression)


State 58

   26 AndExpression: ConditionalBase .

    $default  reduce using rule 26 (AndExpression)


State 59

   28 ConditionalBase: RelationalExpression .
   31 RelationalExpression: RelationalExpression . RelationalOperator Expression

    '='  shift, and go to state 88
    '!'  shift, and go to state 89
    '<'  shift, and go to state 90
    '>'  shift, and go to state 91

    $default  reduce using rule 28 (ConditionalBase)

    RelationalOperator  go to state 92


State 60

   32 RelationalExpression: Expression .
   39 Expression: Expression . '+' MultDiv
   40           | Expression . '-' MultDiv

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 32 (RelationalExpression)


State 61

   58 AssignmentExpression: IDENTIFIER . '=' AssignmentRHS
   61 InExpression: IDENTIFIER . IN Iterable
   62 OfExpression: IDENTIFIER . OF Iterable

    IN   shift, and go to state 93
    OF   shift, and go to state 94
    '='  shift, and go to state 31


State 62

    4 Statement: FOR '(' Initialisation . SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement

    SEMICOLON  shift, and go to state 95


State 63

   56 Initialisation: AssignmentExpression .

    $default  reduce using rule 56 (Initialisation)


State 64

    5 Statement: FOR '(' InExpression . ')' '{' Statement '}' Statement

    ')'  shift, and go to state 96


State 65

    6 Statement: FOR '(' OfExpression . ')' '{' Statement '}' Statement

    ')'  shift, and go to state 97


State 66

   66 Array: '[' . Elements ']'

    NUM         shift, and go to state 98
    STRING      shift, and go to state 99
    IDENTIFIER  shift, and go to state 100

    Elements  go to state 101
    Element   go to state 102


State 67

   31 RelationalExpression: RelationalExpression . RelationalOperator Expression
   59 AssignmentRHS: RelationalExpression .

    '='  shift, and go to state 88
    '!'  shift, and go to state 89
    '<'  shift, and go to state 90
    '>'  shift, and go to state 91

    $default  reduce using rule 59 (AssignmentRHS)

    RelationalOperator  go to state 92


State 68

   58 AssignmentExpression: IDENTIFIER '=' AssignmentRHS .

    $default  reduce using rule 58 (AssignmentExpression)


State 69

   60 AssignmentRHS: Array .

    $default  reduce using rule 60 (AssignmentRHS)


State 70

   10 Statement: UnaryExpression SEMICOLON Statement .

    $default  reduce using rule 10 (Statement)


State 71

    8 Statement: Declaration SEMICOLON Statement .

    $default  reduce using rule 8 (Statement)


State 72

    9 Statement: AssignmentExpression SEMICOLON Statement .

    $default  reduce using rule 9 (Statement)


State 73

   53 ExpressionBase: '(' Expression ')' .

    $default  reduce using rule 53 (ExpressionBase)


State 74

    7 Statement: RETURN Expression SEMICOLON Statement .

    $default  reduce using rule 7 (Statement)


State 75

   39 Expression: Expression '+' MultDiv .
   42 MultDiv: MultDiv . '*' ExponentialExpression
   43        | MultDiv . '/' ExponentialExpression

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 39 (Expression)


State 76

   40 Expression: Expression '-' MultDiv .
   42 MultDiv: MultDiv . '*' ExponentialExpression
   43        | MultDiv . '/' ExponentialExpression

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 40 (Expression)


State 77

   42 MultDiv: MultDiv '*' ExponentialExpression .

    $default  reduce using rule 42 (MultDiv)


State 78

   43 MultDiv: MultDiv '/' ExponentialExpression .

    $default  reduce using rule 43 (MultDiv)


State 79

   45 ExponentialExpression: UnaryPostExpression '^' ExponentialExpression .

    $default  reduce using rule 45 (ExponentialExpression)


State 80

   20 Variable: IDENTIFIER '=' AssignmentRHS .

    $default  reduce using rule 20 (Variable)


State 81

   17 Variables: Variables ',' Variable .

    $default  reduce using rule 17 (Variables)


State 82

   27 ConditionalBase: '(' Condition . ')'

    ')'  shift, and go to state 103


State 83

   32 RelationalExpression: Expression .
   39 Expression: Expression . '+' MultDiv
   40           | Expression . '-' MultDiv
   53 ExpressionBase: '(' Expression . ')'

    ')'  shift, and go to state 73
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    ')'       [reduce using rule 32 (RelationalExpression)]
    $default  reduce using rule 32 (RelationalExpression)


State 84

   21 Condition: '!' OrExpression .
   23 OrExpression: OrExpression . '|' '|' AndExpression

    '|'  shift, and go to state 86

    $default  reduce using rule 21 (Condition)


State 85

    2 Statement: IF '(' Condition ')' . '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' . '{' Statement '}' Statement

    '{'  shift, and go to state 104


State 86

   23 OrExpression: OrExpression '|' . '|' AndExpression

    '|'  shift, and go to state 105


State 87

   25 AndExpression: AndExpression '&' . '&' ConditionalBase

    '&'  shift, and go to state 106


State 88

   37 RelationalOperator: '=' . '='

    '='  shift, and go to state 107


State 89

   38 RelationalOperator: '!' . '='

    '='  shift, and go to state 108


State 90

   33 RelationalOperator: '<' .
   35                   | '<' . '='

    '='  shift, and go to state 109

    $default  reduce using rule 33 (RelationalOperator)


State 91

   34 RelationalOperator: '>' .
   36                   | '>' . '='

    '='  shift, and go to state 110

    $default  reduce using rule 34 (RelationalOperator)


State 92

   31 RelationalExpression: RelationalExpression RelationalOperator . Expression

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17

    Expression             go to state 111
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 93

   61 InExpression: IDENTIFIER IN . Iterable

    STRING      shift, and go to state 112
    IDENTIFIER  shift, and go to state 113
    '['         shift, and go to state 66

    Iterable  go to state 114
    Array     go to state 115


State 94

   62 OfExpression: IDENTIFIER OF . Iterable

    STRING      shift, and go to state 112
    IDENTIFIER  shift, and go to state 113
    '['         shift, and go to state 66

    Iterable  go to state 116
    Array     go to state 115


State 95

    4 Statement: FOR '(' Initialisation SEMICOLON . Condition SEMICOLON Expression ')' '{' Statement '}' Statement

    NUM         shift, and go to state 13
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 53
    '!'         shift, and go to state 54

    Condition              go to state 117
    OrExpression           go to state 56
    AndExpression          go to state 57
    ConditionalBase        go to state 58
    RelationalExpression   go to state 59
    Expression             go to state 60
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 96

    5 Statement: FOR '(' InExpression ')' . '{' Statement '}' Statement

    '{'  shift, and go to state 118


State 97

    6 Statement: FOR '(' OfExpression ')' . '{' Statement '}' Statement

    '{'  shift, and go to state 119


State 98

   70 Element: NUM .

    $default  reduce using rule 70 (Element)


State 99

   71 Element: STRING .

    $default  reduce using rule 71 (Element)


State 100

   69 Element: IDENTIFIER .

    $default  reduce using rule 69 (Element)


State 101

   66 Array: '[' Elements . ']'
   67 Elements: Elements . ',' Element

    ','  shift, and go to state 120
    ']'  shift, and go to state 121


State 102

   68 Elements: Element .

    $default  reduce using rule 68 (Elements)


State 103

   27 ConditionalBase: '(' Condition ')' .

    $default  reduce using rule 27 (ConditionalBase)


State 104

    2 Statement: IF '(' Condition ')' '{' . Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 122
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 105

   23 OrExpression: OrExpression '|' '|' . AndExpression

    NUM         shift, and go to state 13
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 53

    AndExpression          go to state 123
    ConditionalBase        go to state 58
    RelationalExpression   go to state 59
    Expression             go to state 60
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 106

   25 AndExpression: AndExpression '&' '&' . ConditionalBase

    NUM         shift, and go to state 13
    TRUE        shift, and go to state 51
    FALSE       shift, and go to state 52
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 53

    ConditionalBase        go to state 124
    RelationalExpression   go to state 59
    Expression             go to state 60
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 107

   37 RelationalOperator: '=' '=' .

    $default  reduce using rule 37 (RelationalOperator)


State 108

   38 RelationalOperator: '!' '=' .

    $default  reduce using rule 38 (RelationalOperator)


State 109

   35 RelationalOperator: '<' '=' .

    $default  reduce using rule 35 (RelationalOperator)


State 110

   36 RelationalOperator: '>' '=' .

    $default  reduce using rule 36 (RelationalOperator)


State 111

   31 RelationalExpression: RelationalExpression RelationalOperator Expression .
   39 Expression: Expression . '+' MultDiv
   40           | Expression . '-' MultDiv

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 31 (RelationalExpression)


State 112

   64 Iterable: STRING .

    $default  reduce using rule 64 (Iterable)


State 113

   65 Iterable: IDENTIFIER .

    $default  reduce using rule 65 (Iterable)


State 114

   61 InExpression: IDENTIFIER IN Iterable .

    $default  reduce using rule 61 (InExpression)


State 115

   63 Iterable: Array .

    $default  reduce using rule 63 (Iterable)


State 116

   62 OfExpression: IDENTIFIER OF Iterable .

    $default  reduce using rule 62 (OfExpression)


State 117

    4 Statement: FOR '(' Initialisation SEMICOLON Condition . SEMICOLON Expression ')' '{' Statement '}' Statement

    SEMICOLON  shift, and go to state 125


State 118

    5 Statement: FOR '(' InExpression ')' '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 126
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 119

    6 Statement: FOR '(' OfExpression ')' '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 127
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 120

   67 Elements: Elements ',' . Element

    NUM         shift, and go to state 98
    STRING      shift, and go to state 99
    IDENTIFIER  shift, and go to state 100

    Element  go to state 128


State 121

   66 Array: '[' Elements ']' .

    $default  reduce using rule 66 (Array)


State 122

    2 Statement: IF '(' Condition ')' '{' Statement . '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' '{' Statement . '}' Statement

    '}'  shift, and go to state 129


State 123

   23 OrExpression: OrExpression '|' '|' AndExpression .
   25 AndExpression: AndExpression . '&' '&' ConditionalBase

    '&'  shift, and go to state 87

    $default  reduce using rule 23 (OrExpression)


State 124

   25 AndExpression: AndExpression '&' '&' ConditionalBase .

    $default  reduce using rule 25 (AndExpression)


State 125

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON . Expression ')' '{' Statement '}' Statement

    NUM         shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    UNARYPLUS   shift, and go to state 15
    UNARYMINUS  shift, and go to state 16
    '('         shift, and go to state 17

    Expression             go to state 130
    MultDiv                go to state 19
    ExponentialExpression  go to state 20
    UnaryPostExpression    go to state 21
    UnaryPreExpression     go to state 22
    ExpressionBase         go to state 23


State 126

    5 Statement: FOR '(' InExpression ')' '{' Statement . '}' Statement

    '}'  shift, and go to state 131


State 127

    6 Statement: FOR '(' OfExpression ')' '{' Statement . '}' Statement

    '}'  shift, and go to state 132


State 128

   67 Elements: Elements ',' Element .

    $default  reduce using rule 67 (Elements)


State 129

    2 Statement: IF '(' Condition ')' '{' Statement '}' . ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    ELSE        shift, and go to state 133
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 134
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 130

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression . ')' '{' Statement '}' Statement
   39 Expression: Expression . '+' MultDiv
   40           | Expression . '-' MultDiv

    ')'  shift, and go to state 135
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43


State 131

    5 Statement: FOR '(' InExpression ')' '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 136
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 132

    6 Statement: FOR '(' OfExpression ')' '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 137
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 133

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE . '{' Statement '}' Statement

    '{'  shift, and go to state 138


State 134

    3 Statement: IF '(' Condition ')' '{' Statement '}' Statement .

    $default  reduce using rule 3 (Statement)


State 135

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' . '{' Statement '}' Statement

    '{'  shift, and go to state 139


State 136

    5 Statement: FOR '(' InExpression ')' '{' Statement '}' Statement .

    $default  reduce using rule 5 (Statement)


State 137

    6 Statement: FOR '(' OfExpression ')' '{' Statement '}' Statement .

    $default  reduce using rule 6 (Statement)


State 138

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 140
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 139

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 141
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 140

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' Statement . '}' Statement

    '}'  shift, and go to state 142


State 141

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement . '}' Statement

    '}'  shift, and go to state 143


State 142

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 144
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 143

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    UNARYPLUS   shift, and go to state 6
    UNARYMINUS  shift, and go to state 7

    $default  reduce using rule 11 (Statement)

    Statement             go to state 145
    UnaryExpression       go to state 10
    Declaration           go to state 11
    AssignmentExpression  go to state 12


State 144

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' Statement '}' Statement .

    $default  reduce using rule 2 (Statement)


State 145

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement .

    $default  reduce using rule 4 (Statement)
