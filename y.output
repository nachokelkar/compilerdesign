State 73 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Statement

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' '{' Statement '}' Statement
    4          | FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement
    5          | FOR '(' InExpression ')' '{' Statement '}' Statement
    6          | FOR '(' OfExpression ')' '{' Statement '}' Statement
    7          | RETURN Expression SEMICOLON Statement
    8          | Declaration SEMICOLON Statement
    9          | AssignmentExpression SEMICOLON Statement
   10          | %empty

   11 Declaration: VAR Variables

   12 Variables: Variables ',' Variable
   13          | Variable

   14 Variable: IDENTIFIER
   15         | AssignmentExpression

   16 Condition: '!' OrExpression
   17          | OrExpression

   18 OrExpression: OrExpression '|' '|' AndExpression
   19             | AndExpression

   20 AndExpression: AndExpression '&' '&' ConditionalBase
   21              | ConditionalBase

   22 ConditionalBase: '(' Condition ')'
   23                | RelationalExpression
   24                | TRUE
   25                | FALSE

   26 RelationalExpression: RelationalExpression RelationalOperator Expression
   27                     | Expression

   28 RelationalOperator: '<'
   29                   | '>'
   30                   | '<' '='
   31                   | '>' '='
   32                   | '=' '='
   33                   | '!' '='

   34 Expression: Expression '+' MultDiv
   35           | Expression '-' MultDiv
   36           | MultDiv

   37 MultDiv: MultDiv '*' ExponentialExpression
   38        | MultDiv '/' ExponentialExpression
   39        | ExponentialExpression

   40 ExponentialExpression: UnaryPostExpression '^' ExponentialExpression
   41                      | UnaryPostExpression

   42 UnaryPostExpression: UnaryPreExpression UNARYPLUS
   43                    | UnaryPreExpression UNARYMINUS
   44                    | UnaryPreExpression

   45 UnaryPreExpression: UNARYPLUS ExpressionBase
   46                   | UNARYMINUS ExpressionBase
   47                   | ExpressionBase

   48 ExpressionBase: '(' Expression ')'
   49               | IDENTIFIER
   50               | NUM

   51 Initialisation: AssignmentExpression
   52               | %empty

   53 AssignmentExpression: IDENTIFIER '=' AssignmentRHS

   54 AssignmentRHS: RelationalExpression
   55              | Array

   56 InExpression: IDENTIFIER IN Iterable

   57 OfExpression: IDENTIFIER OF Iterable

   58 Iterable: Array
   59         | STRING
   60         | IDENTIFIER

   61 Array: '[' Elements ']'

   62 Elements: Elements ',' Element
   63         | Element

   64 Element: IDENTIFIER
   65        | NUM
   66        | STRING


Terminals, with rules where they appear

$end (0) 0
'!' (33) 16 33
'&' (38) 20
'(' (40) 2 3 4 5 6 22 48
')' (41) 2 3 4 5 6 22 48
'*' (42) 37
'+' (43) 34
',' (44) 12 62
'-' (45) 35
'/' (47) 38
'<' (60) 28 30
'=' (61) 30 31 32 33 53
'>' (62) 29 31
'[' (91) 61
']' (93) 61
'^' (94) 40
'{' (123) 2 3 4 5 6
'|' (124) 18
'}' (125) 2 3 4 5 6
error (256)
RETURN (258) 7
SEMICOLON (259) 4 7 8 9
NUM (260) 50 65
VAR (261) 11
TRUE (262) 24
FALSE (263) 25
IF (264) 2 3
FOR (265) 4 5 6
IN (266) 56
OF (267) 57
ELSE (268) 2
STRING (269) 59 66
IDENTIFIER (270) 14 49 53 56 57 60 64
UNARYPLUS (271) 42 45
UNARYMINUS (272) 43 46


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
Program (37)
    on left: 1, on right: 0
Statement (38)
    on left: 2 3 4 5 6 7 8 9 10, on right: 1 2 3 4 5 6 7 8 9
Declaration (39)
    on left: 11, on right: 8
Variables (40)
    on left: 12 13, on right: 11 12
Variable (41)
    on left: 14 15, on right: 12 13
Condition (42)
    on left: 16 17, on right: 2 3 4 22
OrExpression (43)
    on left: 18 19, on right: 16 17 18
AndExpression (44)
    on left: 20 21, on right: 18 19 20
ConditionalBase (45)
    on left: 22 23 24 25, on right: 20 21
RelationalExpression (46)
    on left: 26 27, on right: 23 26 54
RelationalOperator (47)
    on left: 28 29 30 31 32 33, on right: 26
Expression (48)
    on left: 34 35 36, on right: 4 7 26 27 34 35 48
MultDiv (49)
    on left: 37 38 39, on right: 34 35 36 37 38
ExponentialExpression (50)
    on left: 40 41, on right: 37 38 39 40
UnaryPostExpression (51)
    on left: 42 43 44, on right: 40 41
UnaryPreExpression (52)
    on left: 45 46 47, on right: 42 43 44
ExpressionBase (53)
    on left: 48 49 50, on right: 45 46 47
Initialisation (54)
    on left: 51 52, on right: 4
AssignmentExpression (55)
    on left: 53, on right: 9 15 51
AssignmentRHS (56)
    on left: 54 55, on right: 53
InExpression (57)
    on left: 56, on right: 5
OfExpression (58)
    on left: 57, on right: 6
Iterable (59)
    on left: 58 59 60, on right: 56 57
Array (60)
    on left: 61, on right: 55 58
Elements (61)
    on left: 62 63, on right: 61 62
Element (62)
    on left: 64 65 66, on right: 62 63


State 0

    0 $accept: . Program $end

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Program               go to state 6
    Statement             go to state 7
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 1

    7 Statement: RETURN . Expression SEMICOLON Statement

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14

    Expression             go to state 15
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 2

   11 Declaration: VAR . Variables

    IDENTIFIER  shift, and go to state 21

    Variables             go to state 22
    Variable              go to state 23
    AssignmentExpression  go to state 24


State 3

    2 Statement: IF . '(' Condition ')' '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF . '(' Condition ')' '{' Statement '}' Statement

    '('  shift, and go to state 25


State 4

    4 Statement: FOR . '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement
    5          | FOR . '(' InExpression ')' '{' Statement '}' Statement
    6          | FOR . '(' OfExpression ')' '{' Statement '}' Statement

    '('  shift, and go to state 26


State 5

   53 AssignmentExpression: IDENTIFIER . '=' AssignmentRHS

    '='  shift, and go to state 27


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 28


State 7

    1 Program: Statement .

    $default  reduce using rule 1 (Program)


State 8

    8 Statement: Declaration . SEMICOLON Statement

    SEMICOLON  shift, and go to state 29


State 9

    9 Statement: AssignmentExpression . SEMICOLON Statement

    SEMICOLON  shift, and go to state 30


State 10

   50 ExpressionBase: NUM .

    $default  reduce using rule 50 (ExpressionBase)


State 11

   49 ExpressionBase: IDENTIFIER .

    $default  reduce using rule 49 (ExpressionBase)


State 12

   45 UnaryPreExpression: UNARYPLUS . ExpressionBase

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    '('         shift, and go to state 14

    ExpressionBase  go to state 31


State 13

   46 UnaryPreExpression: UNARYMINUS . ExpressionBase

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    '('         shift, and go to state 14

    ExpressionBase  go to state 32


State 14

   48 ExpressionBase: '(' . Expression ')'

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14

    Expression             go to state 33
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 15

    7 Statement: RETURN Expression . SEMICOLON Statement
   34 Expression: Expression . '+' MultDiv
   35           | Expression . '-' MultDiv

    SEMICOLON  shift, and go to state 34
    '+'        shift, and go to state 35
    '-'        shift, and go to state 36


State 16

   36 Expression: MultDiv .
   37 MultDiv: MultDiv . '*' ExponentialExpression
   38        | MultDiv . '/' ExponentialExpression

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 36 (Expression)


State 17

   39 MultDiv: ExponentialExpression .

    $default  reduce using rule 39 (MultDiv)


State 18

   40 ExponentialExpression: UnaryPostExpression . '^' ExponentialExpression
   41                      | UnaryPostExpression .

    '^'  shift, and go to state 39

    $default  reduce using rule 41 (ExponentialExpression)


State 19

   42 UnaryPostExpression: UnaryPreExpression . UNARYPLUS
   43                    | UnaryPreExpression . UNARYMINUS
   44                    | UnaryPreExpression .

    UNARYPLUS   shift, and go to state 40
    UNARYMINUS  shift, and go to state 41

    $default  reduce using rule 44 (UnaryPostExpression)


State 20

   47 UnaryPreExpression: ExpressionBase .

    $default  reduce using rule 47 (UnaryPreExpression)


State 21

   14 Variable: IDENTIFIER .
   53 AssignmentExpression: IDENTIFIER . '=' AssignmentRHS

    '='  shift, and go to state 27

    $default  reduce using rule 14 (Variable)


State 22

   11 Declaration: VAR Variables .
   12 Variables: Variables . ',' Variable

    ','  shift, and go to state 42

    $default  reduce using rule 11 (Declaration)


State 23

   13 Variables: Variable .

    $default  reduce using rule 13 (Variables)


State 24

   15 Variable: AssignmentExpression .

    $default  reduce using rule 15 (Variable)


State 25

    2 Statement: IF '(' . Condition ')' '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' . Condition ')' '{' Statement '}' Statement

    NUM         shift, and go to state 10
    TRUE        shift, and go to state 43
    FALSE       shift, and go to state 44
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Condition              go to state 47
    OrExpression           go to state 48
    AndExpression          go to state 49
    ConditionalBase        go to state 50
    RelationalExpression   go to state 51
    Expression             go to state 52
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 26

    4 Statement: FOR '(' . Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement
    5          | FOR '(' . InExpression ')' '{' Statement '}' Statement
    6          | FOR '(' . OfExpression ')' '{' Statement '}' Statement

    IDENTIFIER  shift, and go to state 53

    $default  reduce using rule 52 (Initialisation)

    Initialisation        go to state 54
    AssignmentExpression  go to state 55
    InExpression          go to state 56
    OfExpression          go to state 57


State 27

   53 AssignmentExpression: IDENTIFIER '=' . AssignmentRHS

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 58

    RelationalExpression   go to state 59
    Expression             go to state 52
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20
    AssignmentRHS          go to state 60
    Array                  go to state 61


State 28

    0 $accept: Program $end .

    $default  accept


State 29

    8 Statement: Declaration SEMICOLON . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 62
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 30

    9 Statement: AssignmentExpression SEMICOLON . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 63
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 31

   45 UnaryPreExpression: UNARYPLUS ExpressionBase .

    $default  reduce using rule 45 (UnaryPreExpression)


State 32

   46 UnaryPreExpression: UNARYMINUS ExpressionBase .

    $default  reduce using rule 46 (UnaryPreExpression)


State 33

   34 Expression: Expression . '+' MultDiv
   35           | Expression . '-' MultDiv
   48 ExpressionBase: '(' Expression . ')'

    ')'  shift, and go to state 64
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36


State 34

    7 Statement: RETURN Expression SEMICOLON . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 65
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 35

   34 Expression: Expression '+' . MultDiv

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14

    MultDiv                go to state 66
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 36

   35 Expression: Expression '-' . MultDiv

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14

    MultDiv                go to state 67
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 37

   37 MultDiv: MultDiv '*' . ExponentialExpression

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14

    ExponentialExpression  go to state 68
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 38

   38 MultDiv: MultDiv '/' . ExponentialExpression

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14

    ExponentialExpression  go to state 69
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 39

   40 ExponentialExpression: UnaryPostExpression '^' . ExponentialExpression

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14

    ExponentialExpression  go to state 70
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 40

   42 UnaryPostExpression: UnaryPreExpression UNARYPLUS .

    $default  reduce using rule 42 (UnaryPostExpression)


State 41

   43 UnaryPostExpression: UnaryPreExpression UNARYMINUS .

    $default  reduce using rule 43 (UnaryPostExpression)


State 42

   12 Variables: Variables ',' . Variable

    IDENTIFIER  shift, and go to state 21

    Variable              go to state 71
    AssignmentExpression  go to state 24


State 43

   24 ConditionalBase: TRUE .

    $default  reduce using rule 24 (ConditionalBase)


State 44

   25 ConditionalBase: FALSE .

    $default  reduce using rule 25 (ConditionalBase)


State 45

   22 ConditionalBase: '(' . Condition ')'
   48 ExpressionBase: '(' . Expression ')'

    NUM         shift, and go to state 10
    TRUE        shift, and go to state 43
    FALSE       shift, and go to state 44
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Condition              go to state 72
    OrExpression           go to state 48
    AndExpression          go to state 49
    ConditionalBase        go to state 50
    RelationalExpression   go to state 51
    Expression             go to state 73
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 46

   16 Condition: '!' . OrExpression

    NUM         shift, and go to state 10
    TRUE        shift, and go to state 43
    FALSE       shift, and go to state 44
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 45

    OrExpression           go to state 74
    AndExpression          go to state 49
    ConditionalBase        go to state 50
    RelationalExpression   go to state 51
    Expression             go to state 52
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 47

    2 Statement: IF '(' Condition . ')' '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition . ')' '{' Statement '}' Statement

    ')'  shift, and go to state 75


State 48

   17 Condition: OrExpression .
   18 OrExpression: OrExpression . '|' '|' AndExpression

    '|'  shift, and go to state 76

    $default  reduce using rule 17 (Condition)


State 49

   19 OrExpression: AndExpression .
   20 AndExpression: AndExpression . '&' '&' ConditionalBase

    '&'  shift, and go to state 77

    $default  reduce using rule 19 (OrExpression)


State 50

   21 AndExpression: ConditionalBase .

    $default  reduce using rule 21 (AndExpression)


State 51

   23 ConditionalBase: RelationalExpression .
   26 RelationalExpression: RelationalExpression . RelationalOperator Expression

    '!'  shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '='  shift, and go to state 81

    $default  reduce using rule 23 (ConditionalBase)

    RelationalOperator  go to state 82


State 52

   27 RelationalExpression: Expression .
   34 Expression: Expression . '+' MultDiv
   35           | Expression . '-' MultDiv

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 27 (RelationalExpression)


State 53

   53 AssignmentExpression: IDENTIFIER . '=' AssignmentRHS
   56 InExpression: IDENTIFIER . IN Iterable
   57 OfExpression: IDENTIFIER . OF Iterable

    IN   shift, and go to state 83
    OF   shift, and go to state 84
    '='  shift, and go to state 27


State 54

    4 Statement: FOR '(' Initialisation . SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement

    SEMICOLON  shift, and go to state 85


State 55

   51 Initialisation: AssignmentExpression .

    $default  reduce using rule 51 (Initialisation)


State 56

    5 Statement: FOR '(' InExpression . ')' '{' Statement '}' Statement

    ')'  shift, and go to state 86


State 57

    6 Statement: FOR '(' OfExpression . ')' '{' Statement '}' Statement

    ')'  shift, and go to state 87


State 58

   61 Array: '[' . Elements ']'

    NUM         shift, and go to state 88
    STRING      shift, and go to state 89
    IDENTIFIER  shift, and go to state 90

    Elements  go to state 91
    Element   go to state 92


State 59

   26 RelationalExpression: RelationalExpression . RelationalOperator Expression
   54 AssignmentRHS: RelationalExpression .

    '!'  shift, and go to state 78
    '<'  shift, and go to state 79
    '>'  shift, and go to state 80
    '='  shift, and go to state 81

    $default  reduce using rule 54 (AssignmentRHS)

    RelationalOperator  go to state 82


State 60

   53 AssignmentExpression: IDENTIFIER '=' AssignmentRHS .

    $default  reduce using rule 53 (AssignmentExpression)


State 61

   55 AssignmentRHS: Array .

    $default  reduce using rule 55 (AssignmentRHS)


State 62

    8 Statement: Declaration SEMICOLON Statement .

    $default  reduce using rule 8 (Statement)


State 63

    9 Statement: AssignmentExpression SEMICOLON Statement .

    $default  reduce using rule 9 (Statement)


State 64

   48 ExpressionBase: '(' Expression ')' .

    $default  reduce using rule 48 (ExpressionBase)


State 65

    7 Statement: RETURN Expression SEMICOLON Statement .

    $default  reduce using rule 7 (Statement)


State 66

   34 Expression: Expression '+' MultDiv .
   37 MultDiv: MultDiv . '*' ExponentialExpression
   38        | MultDiv . '/' ExponentialExpression

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 34 (Expression)


State 67

   35 Expression: Expression '-' MultDiv .
   37 MultDiv: MultDiv . '*' ExponentialExpression
   38        | MultDiv . '/' ExponentialExpression

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 35 (Expression)


State 68

   37 MultDiv: MultDiv '*' ExponentialExpression .

    $default  reduce using rule 37 (MultDiv)


State 69

   38 MultDiv: MultDiv '/' ExponentialExpression .

    $default  reduce using rule 38 (MultDiv)


State 70

   40 ExponentialExpression: UnaryPostExpression '^' ExponentialExpression .

    $default  reduce using rule 40 (ExponentialExpression)


State 71

   12 Variables: Variables ',' Variable .

    $default  reduce using rule 12 (Variables)


State 72

   22 ConditionalBase: '(' Condition . ')'

    ')'  shift, and go to state 93


State 73

   27 RelationalExpression: Expression .
   34 Expression: Expression . '+' MultDiv
   35           | Expression . '-' MultDiv
   48 ExpressionBase: '(' Expression . ')'

    ')'  shift, and go to state 64
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    ')'       [reduce using rule 27 (RelationalExpression)]
    $default  reduce using rule 27 (RelationalExpression)


State 74

   16 Condition: '!' OrExpression .
   18 OrExpression: OrExpression . '|' '|' AndExpression

    '|'  shift, and go to state 76

    $default  reduce using rule 16 (Condition)


State 75

    2 Statement: IF '(' Condition ')' . '{' Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' . '{' Statement '}' Statement

    '{'  shift, and go to state 94


State 76

   18 OrExpression: OrExpression '|' . '|' AndExpression

    '|'  shift, and go to state 95


State 77

   20 AndExpression: AndExpression '&' . '&' ConditionalBase

    '&'  shift, and go to state 96


State 78

   33 RelationalOperator: '!' . '='

    '='  shift, and go to state 97


State 79

   28 RelationalOperator: '<' .
   30                   | '<' . '='

    '='  shift, and go to state 98

    $default  reduce using rule 28 (RelationalOperator)


State 80

   29 RelationalOperator: '>' .
   31                   | '>' . '='

    '='  shift, and go to state 99

    $default  reduce using rule 29 (RelationalOperator)


State 81

   32 RelationalOperator: '=' . '='

    '='  shift, and go to state 100


State 82

   26 RelationalExpression: RelationalExpression RelationalOperator . Expression

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14

    Expression             go to state 101
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 83

   56 InExpression: IDENTIFIER IN . Iterable

    STRING      shift, and go to state 102
    IDENTIFIER  shift, and go to state 103
    '['         shift, and go to state 58

    Iterable  go to state 104
    Array     go to state 105


State 84

   57 OfExpression: IDENTIFIER OF . Iterable

    STRING      shift, and go to state 102
    IDENTIFIER  shift, and go to state 103
    '['         shift, and go to state 58

    Iterable  go to state 106
    Array     go to state 105


State 85

    4 Statement: FOR '(' Initialisation SEMICOLON . Condition SEMICOLON Expression ')' '{' Statement '}' Statement

    NUM         shift, and go to state 10
    TRUE        shift, and go to state 43
    FALSE       shift, and go to state 44
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    Condition              go to state 107
    OrExpression           go to state 48
    AndExpression          go to state 49
    ConditionalBase        go to state 50
    RelationalExpression   go to state 51
    Expression             go to state 52
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 86

    5 Statement: FOR '(' InExpression ')' . '{' Statement '}' Statement

    '{'  shift, and go to state 108


State 87

    6 Statement: FOR '(' OfExpression ')' . '{' Statement '}' Statement

    '{'  shift, and go to state 109


State 88

   65 Element: NUM .

    $default  reduce using rule 65 (Element)


State 89

   66 Element: STRING .

    $default  reduce using rule 66 (Element)


State 90

   64 Element: IDENTIFIER .

    $default  reduce using rule 64 (Element)


State 91

   61 Array: '[' Elements . ']'
   62 Elements: Elements . ',' Element

    ','  shift, and go to state 110
    ']'  shift, and go to state 111


State 92

   63 Elements: Element .

    $default  reduce using rule 63 (Elements)


State 93

   22 ConditionalBase: '(' Condition ')' .

    $default  reduce using rule 22 (ConditionalBase)


State 94

    2 Statement: IF '(' Condition ')' '{' . Statement '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 112
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 95

   18 OrExpression: OrExpression '|' '|' . AndExpression

    NUM         shift, and go to state 10
    TRUE        shift, and go to state 43
    FALSE       shift, and go to state 44
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 45

    AndExpression          go to state 113
    ConditionalBase        go to state 50
    RelationalExpression   go to state 51
    Expression             go to state 52
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 96

   20 AndExpression: AndExpression '&' '&' . ConditionalBase

    NUM         shift, and go to state 10
    TRUE        shift, and go to state 43
    FALSE       shift, and go to state 44
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 45

    ConditionalBase        go to state 114
    RelationalExpression   go to state 51
    Expression             go to state 52
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 97

   33 RelationalOperator: '!' '=' .

    $default  reduce using rule 33 (RelationalOperator)


State 98

   30 RelationalOperator: '<' '=' .

    $default  reduce using rule 30 (RelationalOperator)


State 99

   31 RelationalOperator: '>' '=' .

    $default  reduce using rule 31 (RelationalOperator)


State 100

   32 RelationalOperator: '=' '=' .

    $default  reduce using rule 32 (RelationalOperator)


State 101

   26 RelationalExpression: RelationalExpression RelationalOperator Expression .
   34 Expression: Expression . '+' MultDiv
   35           | Expression . '-' MultDiv

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36

    $default  reduce using rule 26 (RelationalExpression)


State 102

   59 Iterable: STRING .

    $default  reduce using rule 59 (Iterable)


State 103

   60 Iterable: IDENTIFIER .

    $default  reduce using rule 60 (Iterable)


State 104

   56 InExpression: IDENTIFIER IN Iterable .

    $default  reduce using rule 56 (InExpression)


State 105

   58 Iterable: Array .

    $default  reduce using rule 58 (Iterable)


State 106

   57 OfExpression: IDENTIFIER OF Iterable .

    $default  reduce using rule 57 (OfExpression)


State 107

    4 Statement: FOR '(' Initialisation SEMICOLON Condition . SEMICOLON Expression ')' '{' Statement '}' Statement

    SEMICOLON  shift, and go to state 115


State 108

    5 Statement: FOR '(' InExpression ')' '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 116
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 109

    6 Statement: FOR '(' OfExpression ')' '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 117
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 110

   62 Elements: Elements ',' . Element

    NUM         shift, and go to state 88
    STRING      shift, and go to state 89
    IDENTIFIER  shift, and go to state 90

    Element  go to state 118


State 111

   61 Array: '[' Elements ']' .

    $default  reduce using rule 61 (Array)


State 112

    2 Statement: IF '(' Condition ')' '{' Statement . '}' ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' '{' Statement . '}' Statement

    '}'  shift, and go to state 119


State 113

   18 OrExpression: OrExpression '|' '|' AndExpression .
   20 AndExpression: AndExpression . '&' '&' ConditionalBase

    '&'  shift, and go to state 77

    $default  reduce using rule 18 (OrExpression)


State 114

   20 AndExpression: AndExpression '&' '&' ConditionalBase .

    $default  reduce using rule 20 (AndExpression)


State 115

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON . Expression ')' '{' Statement '}' Statement

    NUM         shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    UNARYPLUS   shift, and go to state 12
    UNARYMINUS  shift, and go to state 13
    '('         shift, and go to state 14

    Expression             go to state 120
    MultDiv                go to state 16
    ExponentialExpression  go to state 17
    UnaryPostExpression    go to state 18
    UnaryPreExpression     go to state 19
    ExpressionBase         go to state 20


State 116

    5 Statement: FOR '(' InExpression ')' '{' Statement . '}' Statement

    '}'  shift, and go to state 121


State 117

    6 Statement: FOR '(' OfExpression ')' '{' Statement . '}' Statement

    '}'  shift, and go to state 122


State 118

   62 Elements: Elements ',' Element .

    $default  reduce using rule 62 (Elements)


State 119

    2 Statement: IF '(' Condition ')' '{' Statement '}' . ELSE '{' Statement '}' Statement
    3          | IF '(' Condition ')' '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    ELSE        shift, and go to state 123
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 124
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 120

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression . ')' '{' Statement '}' Statement
   34 Expression: Expression . '+' MultDiv
   35           | Expression . '-' MultDiv

    ')'  shift, and go to state 125
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36


State 121

    5 Statement: FOR '(' InExpression ')' '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 126
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 122

    6 Statement: FOR '(' OfExpression ')' '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 127
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 123

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE . '{' Statement '}' Statement

    '{'  shift, and go to state 128


State 124

    3 Statement: IF '(' Condition ')' '{' Statement '}' Statement .

    $default  reduce using rule 3 (Statement)


State 125

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' . '{' Statement '}' Statement

    '{'  shift, and go to state 129


State 126

    5 Statement: FOR '(' InExpression ')' '{' Statement '}' Statement .

    $default  reduce using rule 5 (Statement)


State 127

    6 Statement: FOR '(' OfExpression ')' '{' Statement '}' Statement .

    $default  reduce using rule 6 (Statement)


State 128

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 130
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 129

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' . Statement '}' Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 131
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 130

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' Statement . '}' Statement

    '}'  shift, and go to state 132


State 131

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement . '}' Statement

    '}'  shift, and go to state 133


State 132

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 134
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 133

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' . Statement

    RETURN      shift, and go to state 1
    VAR         shift, and go to state 2
    IF          shift, and go to state 3
    FOR         shift, and go to state 4
    IDENTIFIER  shift, and go to state 5

    $default  reduce using rule 10 (Statement)

    Statement             go to state 135
    Declaration           go to state 8
    AssignmentExpression  go to state 9


State 134

    2 Statement: IF '(' Condition ')' '{' Statement '}' ELSE '{' Statement '}' Statement .

    $default  reduce using rule 2 (Statement)


State 135

    4 Statement: FOR '(' Initialisation SEMICOLON Condition SEMICOLON Expression ')' '{' Statement '}' Statement .

    $default  reduce using rule 4 (Statement)
